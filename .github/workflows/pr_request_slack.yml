name: PR Review Request

on:
  pull_request:
    types: [review_requested] # 리뷰어가 요청될 때만 실행

jobs:
  notify_reviewer:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Get PR Info with Labels
        id: pr_info
        uses: actions/github-script@v6
        with:
          script: |
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });
            const dDayLabel = pr.labels
              .find(label => label.name.startsWith('D-'))?.name || 'D-3';
            return JSON.stringify({ dDayLabel });

      - name: 리뷰어 목록 가져오기
        id: reviewers
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const workers = JSON.parse(fs.readFileSync('.github/workflows/reviewers.json'));
            const mentions = context.payload.pull_request.requested_reviewers.map((user) => {
              const login = user.login;
              return workers[login] || null;
            }).filter(id => id !== null);
            return JSON.stringify(mentions);

      # 나
